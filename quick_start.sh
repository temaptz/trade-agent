#!/bin/bash

# –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Ä–æ–±–æ—Ç–∞
# –ê–≤—Ç–æ—Ä: AI Assistant
# –í–µ—Ä—Å–∏—è: 1.0

echo "ü§ñ –¢–æ—Ä–≥–æ–≤—ã–π —Ä–æ–±–æ—Ç —Å –ò–ò-–∞–≥–µ–Ω—Ç–æ–º - –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫"
echo "================================================"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
print_status() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Python..."
if command -v python3 &> /dev/null; then
    PYTHON_VERSION=$(python3 -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')
    if python3 -c 'import sys; exit(0 if sys.version_info >= (3, 8) else 1)'; then
        print_status "Python $PYTHON_VERSION –Ω–∞–π–¥–µ–Ω"
    else
        print_error "–¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ"
        exit 1
    fi
else
    print_error "Python3 –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ pip
print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ pip..."
if command -v pip3 &> /dev/null; then
    print_status "pip3 –Ω–∞–π–¥–µ–Ω"
else
    print_error "pip3 –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if pip3 install -r requirements.txt; then
    print_status "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    print_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Ollama
print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ Ollama..."
if command -v ollama &> /dev/null; then
    print_status "Ollama –Ω–∞–π–¥–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω –ª–∏ Ollama
    if curl -s http://localhost:11434/api/tags > /dev/null 2>&1; then
        print_status "Ollama –∑–∞–ø—É—â–µ–Ω"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏ Gemma
        if ollama list | grep -q "gemma2:9b"; then
            print_status "–ú–æ–¥–µ–ª—å Gemma2:9b –Ω–∞–π–¥–µ–Ω–∞"
        else
            print_warning "–ú–æ–¥–µ–ª—å Gemma2:9b –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∑–∞–≥—Ä—É–∂–∞–µ–º..."
            if ollama pull gemma2:9b; then
                print_status "–ú–æ–¥–µ–ª—å Gemma2:9b –∑–∞–≥—Ä—É–∂–µ–Ω–∞"
            else
                print_error "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏"
                exit 1
            fi
        fi
    else
        print_warning "Ollama –Ω–µ –∑–∞–ø—É—â–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º..."
        nohup ollama serve > /dev/null 2>&1 &
        sleep 5
        
        if curl -s http://localhost:11434/api/tags > /dev/null 2>&1; then
            print_status "Ollama –∑–∞–ø—É—â–µ–Ω"
        else
            print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Ollama"
            exit 1
        fi
    fi
else
    print_error "Ollama –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Ollama: https://ollama.ai/download"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
if [ ! -f ".env" ]; then
    if [ -f ".env.example" ]; then
        print_warning "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –∏–∑ .env.example"
        cp .env.example .env
        print_warning "–í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à–∏ API –∫–ª—é—á–∏ Bybit"
    else
        print_error "–§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
else
    print_status "–§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω"
fi

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
print_info "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã..."
if python3 test_system.py; then
    print_status "–¢–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã"
else
    print_warning "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
fi

# –ú–µ–Ω—é –∑–∞–ø—É—Å–∫–∞
echo ""
echo "üöÄ –ì–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É!"
echo "==================="
echo "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
echo "1. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–æ–±–æ—Ç–∞"
echo "2. –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"
echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–º–µ—Ä—ã"
echo "4. –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç"
echo "5. –í—ã—Ö–æ–¥"

read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-5): " choice

case $choice in
    1)
        print_info "–ó–∞–ø—É—Å–∫ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Ä–æ–±–æ—Ç–∞..."
        python3 main.py
        ;;
    2)
        print_info "–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã..."
        python3 monitor.py --status
        ;;
    3)
        print_info "–ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–æ–≤..."
        python3 examples.py
        ;;
    4)
        print_info "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞..."
        python3 monitor.py --report
        ;;
    5)
        print_info "–í—ã—Ö–æ–¥"
        exit 0
        ;;
    *)
        print_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
        exit 1
        ;;
esac

print_status "–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω"